<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerLoadScreen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ti4lpHXO+LgP/9k=
</value>
  </data>
</root>